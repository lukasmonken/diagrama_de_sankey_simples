import plotly.graph_objects as go
# Importa a biblioteca Plotly para gr√°ficos, especificamente o m√≥dulo 'graph_objects' que permite criar gr√°ficos detalhados.

# R√≥tulos dos n√≥s
labels = [
    'Receita L√≠quida',     # 0  -> nome do n√≥ 0
    'Lucro Bruto',         # 1  -> nome do n√≥ 1
    'Lucro Operacional',   # 2  -> nome do n√≥ 2
    'Lucro L√≠quido'        # 3  -> nome do n√≥ 3
]

# Fluxos entre os n√≥s
sources = [0, 1, 2, 3]  # de onde vem cada fluxo, √≠ndice do n√≥ de origem
targets = [1, 2, 3, 4]  # para onde vai cada fluxo, √≠ndice do n√≥ de destino
values  = [1000, 100, 50, 20]  # valor (quantidade) do fluxo entre os n√≥s

# Cores personalizadas para os n√≥s
node_colors = ['#40531A','#40531A', '#40531A','#40531A', '#40531A']
# Define a cor de cada n√≥ no gr√°fico (no caso, todas com mesma cor verde escuro)

# Cores personalizadas para os links (com transpar√™ncia)
link_colors = [
    '#C7D59F',   # Receita ‚Üí Bruto
    '#C7D59F',   # Bruto ‚Üí Operacional
    '#C7D59F',   # Operacional ‚Üí L√≠quido
    '#C7D59F'    # Lucro L√≠quido (nota: aqui o target √© 4 que n√£o existe na lista de labels)
]

# Cria√ß√£o do Sankey
fig = go.Figure(data=[go.Sankey(
    arrangement="snap",  # Mant√©m os n√≥s alinhados automaticamente, evita sobreposi√ß√£o
    node=dict(
        pad=10,             # Espa√ßamento interno entre n√≥s
        thickness=20,       # Espessura dos n√≥s
        line=dict(color="gray", width=1), # Contorno dos n√≥s: cor cinza e largura 1px
        label=labels,       # Usa a lista de labels para nomear os n√≥s
        color=node_colors,  # Aplica as cores definidas para os n√≥s
        hoverlabel=dict(    # Configura√ß√£o do estilo da label ao passar o mouse sobre os n√≥s
            bgcolor="white",   # Fundo branco da tooltip
            font_size=14,      # Tamanho da fonte na tooltip
            font_family="Helvetica"  # Fonte Helvetica na tooltip
        )
    ),
    link=dict(
        source=sources,     # Define o n√≥ origem de cada link
        target=targets,     # Define o n√≥ destino de cada link
        value=values,       # Define o valor (largura) do link
        color=link_colors,  # Aplica cores personalizadas para cada link
        hoverlabel=dict(    # Estilo da tooltip ao passar o mouse nos links
            bgcolor="lightgray", # Fundo cinza claro na tooltip
            font_size=13,        # Tamanho da fonte da tooltip
            font_family="Helvetica"  # Fonte Helvetica para tooltip
        )
    )
)])

# Layout geral
fig.update_layout(
    title_text=" ü©¥ Resultado Alpargatas (ALPA4) 2024", # T√≠tulo do gr√°fico que aparecer√° acima do Sankey
    font=dict(
        family="Helvetica",   # Fonte usada no t√≠tulo e textos do gr√°fico
        size=20,              # Tamanho da fonte principal do gr√°fico
        color='rgba(189,224,81,255)' # Cor da fonte em formato RGBA (verde claro)
    ),
    margin=dict(l=50, r=50, t=80, b=50),  # Espa√ßo das margens (left, right, top, bottom)
    paper_bgcolor='rgba(31,31,31,255)',   # Cor de fundo da √°rea total do gr√°fico (fundo da p√°gina do gr√°fico)
    plot_bgcolor='rgba(31,31,31,255)'     # Cor de fundo da √°rea interna do gr√°fico (√°rea onde os n√≥s e links ficam)
)

fig.show()
# Exibe o gr√°fico gerado interativo em uma janela/jupyter notebook/ambiente suportado.
